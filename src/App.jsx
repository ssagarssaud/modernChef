import "./App.css";
import Header from "../components/Header/Header";
import Hero from "../components/Hero/Hero";
import Recipe from "../components/Recipe/Recipe";
import React from "react";
import { useEffect, useRef } from "react";

function App() {
  // Focus the input when page render
  const inputRef = useRef(null);
  useEffect(() => {
    // Focus the input when the component mounts
    if (inputRef.current) {
      inputRef.current.focus();
    }
  }, []);

  //Storing Ingredients and Rendering
  const [ingredients, setIngredients] = React.useState([]);

  const ingredientsListEl = ingredients.map((ingredient) => {
    return <li key={ingredient}>{ingredient}</li>;
  });
  function addIngredients(formData) {
    const newIngredient = formData.get("ingredient");
    setIngredients((prevIngredient) => [...prevIngredient, newIngredient]);
  }
  // Conditionally Rendering the AI output
  // const [recipeShown, getRecipe] = React.useState(false);
  const [recipeShown, getRecipe] = React.useState(false);
  async function handleClick() {
    getRecipe((prevValue) => (prevValue = !prevValue));
  }

  return (
    <>
      <div className="container">
        <Header />
        <Hero />

        <main>
          {/*======== This is the form section ======== */}
          <section className="form-section">
            <form action={addIngredients}>
              <input
                ref={inputRef}
                type="text"
                name="ingredient"
                placeholder="eg. coffee beans"
                aria-label="Here user add the ingredients"
                required
              />
              <button type="submit">Add Ingredients</button>
            </form>
          </section>
          {/* ======= This includes all the list of user ingredients ======== */}
          {ingredients.length > 0 && (
            <section className="ingredients-list">
              <ul>{ingredientsListEl}</ul>
            </section>
          )}
          {/* ======== Recipe Div ======== */}
          {ingredients.length > 3 && (
            <section className="recipeDiv">
              <div>
                <h2>Ready for a recipe?</h2>
                <p>Generate a recipe from your list of ingredients.</p>
              </div>
              <button onClick={handleClick} className="recipeBtn">
                Get a recipe
              </button>
            </section>
          )}

          {/* Recipe generated by the AI */}
          {recipeShown && <Recipe />}
        </main>
      </div>
      <p className="credit">
        created withðŸ’š<span>@sagarsaud</span>{" "}
      </p>
    </>
  );
}

export default App;
